"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5166],{9808:function(e,t,r){/**
 * @license React
 * use-sync-external-store-shim.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var n=r(2265),i="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},a=n.useState,o=n.useEffect,u=n.useLayoutEffect,l=n.useDebugValue;function s(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!i(e,r)}catch(e){return!0}}var c="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function(e,t){return t()}:function(e,t){var r=t(),n=a({inst:{value:r,getSnapshot:t}}),i=n[0].inst,c=n[1];return u(function(){i.value=r,i.getSnapshot=t,s(i)&&c({inst:i})},[e,r,t]),o(function(){return s(i)&&c({inst:i}),e(function(){s(i)&&c({inst:i})})},[e]),l(r),r};t.useSyncExternalStore=void 0!==n.useSyncExternalStore?n.useSyncExternalStore:c},3176:function(e,t,r){/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var n=r(2265),i=r(6272),a="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},o=i.useSyncExternalStore,u=n.useRef,l=n.useEffect,s=n.useMemo,c=n.useDebugValue;t.useSyncExternalStoreWithSelector=function(e,t,r,n,i){var d=u(null);if(null===d.current){var f={hasValue:!1,value:null};d.current=f}else f=d.current;var v=o(e,(d=s(function(){function e(e){if(!l){if(l=!0,o=e,e=n(e),void 0!==i&&f.hasValue){var t=f.value;if(i(t,e))return u=t}return u=e}if(t=u,a(o,e))return t;var r=n(e);return void 0!==i&&i(t,r)?(o=e,t):(o=e,u=r)}var o,u,l=!1,s=void 0===r?null:r;return[function(){return e(t())},null===s?void 0:function(){return e(s())}]},[t,r,n,i]))[0],d[1]);return l(function(){f.hasValue=!0,f.value=v},[v]),c(v),v}},6272:function(e,t,r){e.exports=r(9808)},5401:function(e,t,r){e.exports=r(3176)},4660:function(e,t,r){r.d(t,{Ue:function(){return f}});let n=e=>{let t;let r=new Set,n=(e,n)=>{let i="function"==typeof e?e(t):e;if(!Object.is(i,t)){let e=t;t=(null!=n?n:"object"!=typeof i||null===i)?i:Object.assign({},t,i),r.forEach(r=>r(t,e))}},i=()=>t,a={setState:n,getState:i,getInitialState:()=>o,subscribe:e=>(r.add(e),()=>r.delete(e)),destroy:()=>{console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),r.clear()}},o=t=e(n,i,a);return a},i=e=>e?n(e):n;var a=r(2265),o=r(5401);let{useDebugValue:u}=a,{useSyncExternalStoreWithSelector:l}=o,s=!1,c=e=>e,d=e=>{"function"!=typeof e&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");let t="function"==typeof e?i(e):e,r=(e,r)=>(function(e,t=c,r){r&&!s&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),s=!0);let n=l(e.subscribe,e.getState,e.getServerState||e.getInitialState,t,r);return u(n),n})(t,e,r);return Object.assign(r,t),r},f=e=>e?d(e):d},4810:function(e,t,r){r.d(t,{XR:function(){return n},tJ:function(){return u}});let n=e=>(t,r,n)=>{let i=n.subscribe;n.subscribe=(e,t,r)=>{let a=e;if(t){let i=(null==r?void 0:r.equalityFn)||Object.is,o=e(n.getState());a=r=>{let n=e(r);if(!i(o,n)){let e=o;t(o=n,e)}},(null==r?void 0:r.fireImmediately)&&t(o,o)}return i(a)};let a=e(t,r,n);return a},i=e=>t=>{try{let r=e(t);if(r instanceof Promise)return r;return{then:e=>i(e)(r),catch(e){return this}}}catch(e){return{then(e){return this},catch:t=>i(t)(e)}}},a=(e,t)=>(r,n,a)=>{let o,u,l={getStorage:()=>localStorage,serialize:JSON.stringify,deserialize:JSON.parse,partialize:e=>e,version:0,merge:(e,t)=>({...t,...e}),...t},s=!1,c=new Set,d=new Set;try{o=l.getStorage()}catch(e){}if(!o)return e((...e)=>{console.warn(`[zustand persist middleware] Unable to update item '${l.name}', the given storage is currently unavailable.`),r(...e)},n,a);let f=i(l.serialize),v=()=>{let e;let t=l.partialize({...n()}),r=f({state:t,version:l.version}).then(e=>o.setItem(l.name,e)).catch(t=>{e=t});if(e)throw e;return r},g=a.setState;a.setState=(e,t)=>{g(e,t),v()};let m=e((...e)=>{r(...e),v()},n,a),h=()=>{var e;if(!o)return;s=!1,c.forEach(e=>e(n()));let t=(null==(e=l.onRehydrateStorage)?void 0:e.call(l,n()))||void 0;return i(o.getItem.bind(o))(l.name).then(e=>{if(e)return l.deserialize(e)}).then(e=>{if(e){if("number"!=typeof e.version||e.version===l.version)return e.state;if(l.migrate)return l.migrate(e.state,e.version);console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}}).then(e=>{var t;return r(u=l.merge(e,null!=(t=n())?t:m),!0),v()}).then(()=>{null==t||t(u,void 0),s=!0,d.forEach(e=>e(u))}).catch(e=>{null==t||t(void 0,e)})};return a.persist={setOptions:e=>{l={...l,...e},e.getStorage&&(o=e.getStorage())},clearStorage:()=>{null==o||o.removeItem(l.name)},getOptions:()=>l,rehydrate:()=>h(),hasHydrated:()=>s,onHydrate:e=>(c.add(e),()=>{c.delete(e)}),onFinishHydration:e=>(d.add(e),()=>{d.delete(e)})},h(),u||m},o=(e,t)=>(r,n,a)=>{let o,u={storage:function(e,t){let r;try{r=e()}catch(e){return}return{getItem:e=>{var n;let i=e=>null===e?null:JSON.parse(e,null==t?void 0:t.reviver),a=null!=(n=r.getItem(e))?n:null;return a instanceof Promise?a.then(i):i(a)},setItem:(e,n)=>r.setItem(e,JSON.stringify(n,null==t?void 0:t.replacer)),removeItem:e=>r.removeItem(e)}}(()=>localStorage),partialize:e=>e,version:0,merge:(e,t)=>({...t,...e}),...t},l=!1,s=new Set,c=new Set,d=u.storage;if(!d)return e((...e)=>{console.warn(`[zustand persist middleware] Unable to update item '${u.name}', the given storage is currently unavailable.`),r(...e)},n,a);let f=()=>{let e=u.partialize({...n()});return d.setItem(u.name,{state:e,version:u.version})},v=a.setState;a.setState=(e,t)=>{v(e,t),f()};let g=e((...e)=>{r(...e),f()},n,a);a.getInitialState=()=>g;let m=()=>{var e,t;if(!d)return;l=!1,s.forEach(e=>{var t;return e(null!=(t=n())?t:g)});let a=(null==(t=u.onRehydrateStorage)?void 0:t.call(u,null!=(e=n())?e:g))||void 0;return i(d.getItem.bind(d))(u.name).then(e=>{if(e){if("number"!=typeof e.version||e.version===u.version)return[!1,e.state];if(u.migrate)return[!0,u.migrate(e.state,e.version)];console.error("State loaded from storage couldn't be migrated since no migrate function was provided")}return[!1,void 0]}).then(e=>{var t;let[i,a]=e;if(r(o=u.merge(a,null!=(t=n())?t:g),!0),i)return f()}).then(()=>{null==a||a(o,void 0),o=n(),l=!0,c.forEach(e=>e(o))}).catch(e=>{null==a||a(void 0,e)})};return a.persist={setOptions:e=>{u={...u,...e},e.storage&&(d=e.storage)},clearStorage:()=>{null==d||d.removeItem(u.name)},getOptions:()=>u,rehydrate:()=>m(),hasHydrated:()=>l,onHydrate:e=>(s.add(e),()=>{s.delete(e)}),onFinishHydration:e=>(c.add(e),()=>{c.delete(e)})},u.skipHydration||m(),o||g},u=(e,t)=>"getStorage"in t||"serialize"in t||"deserialize"in t?(console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."),a(e,t)):o(e,t)}}]);